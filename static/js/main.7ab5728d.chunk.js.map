{"version":3,"sources":["loading.gif","Posts.js","Form.js","App.js","reportWebVitals.js","index.js"],"names":["App","props","className","data","name","content","created","Form","useForm","register","handleSubmit","errors","reset","useState","posts","setPosts","useEffect","a","axios","result","fetchData","onSubmit","message","post","resp","console","log","reverse","error","sendPostRequest","htmlFor","type","id","ref","required","style","display","alt","src","loading","map","item","Posts","_id","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0SAAe,MAA0B,oC,gBCe1BA,MAXf,SAAaC,GACX,OACE,sBAAKC,UAAU,WAAf,UACA,6BAAKD,EAAME,KAAKC,OAChB,6BAAKH,EAAME,KAAKE,UAChB,uBACA,4BAAIJ,EAAME,KAAKG,cCHJ,SAASC,IAEpB,IAF2B,EAIqBC,cAAzCC,EAJoB,EAIpBA,SAAUC,EAJU,EAIVA,aAAcC,EAJJ,EAIIA,OAAQC,EAJZ,EAIYA,MAJZ,EAWGC,mBAAS,IAXZ,mBAWhBC,EAXgB,KAWTC,EAXS,KAcvBC,qBAAU,YACO,uCAAG,4BAAAC,EAAA,sEACKC,IACnB,0DAFc,OACVC,EADU,OAKhBJ,EAASI,EAAOhB,MALA,2CAAH,qDAQfiB,KACC,IAgCT,OAEG,qCACI,8EAEG,uBAAMC,SAAUX,GAlCH,SAACY,IACK,uCAAG,4BAAAL,EAAA,+EAEDC,IAAMK,KAAK,yDAA0DD,GAFpE,OAEdE,EAFc,OAGpBC,QAAQC,IAAIF,GAHQ,+BAAAP,EAAA,MAIF,4BAAAA,EAAA,sEACKC,IACnB,0DAFc,QACVC,EADU,QAIThB,KAAKwB,UACZZ,EAASI,EAAOhB,MALA,2CAJE,oDAYpBiB,GAZoB,gDAepBK,QAAQG,MAAR,MAfoB,yDAAH,qDAmBrBC,GACIjB,OAaF,UAEI,uBAAOkB,QAAQ,OAAf,kBACA,uBAAO5B,UAAU,eAAe6B,KAAK,OAAOC,GAAG,OAAO5B,KAAK,OAAO6B,IAAKxB,EAAS,CAACyB,UAAS,MAC1F,uBAAOJ,QAAQ,UAAf,qBACA,0BAAU5B,UAAU,eAAe6B,KAAK,OAAOC,GAAG,UAAU5B,KAAK,UAAU6B,IAAKxB,EAAS,CAACyB,UAAS,MACnG,wBAAQhC,UAAU,iBAAlB,iCACCS,EAAOP,MAAQ,oBAAIF,UAAU,QAAd,kCACfS,EAAON,SAAW,oBAAIH,UAAU,QAAd,gCACnB,qBAAKiC,MAAO,CAACC,QApEJ,QAoET,SACA,qBAAKC,IAAI,GAAGC,IAAKC,MAKdzB,EAAM0B,KAAI,SAAAC,GAAI,OACjB,cAACC,EAAD,CAAsBvC,KAAMsC,GAAhBA,EAAKE,cCvElB3C,MARf,WACE,OACE,qBAAKE,UAAU,YAAf,SACC,cAACK,EAAD,OCIUqC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCCdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.7ab5728d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/loading.1e5c69d3.gif\";","import React from 'react'\r\n\r\n\r\n\r\nfunction App(props) {\r\n  return (\r\n    <div className=\"postitem\">\r\n    <h5>{props.data.name}</h5>\r\n    <h6>{props.data.content}</h6>\r\n    <br/>\r\n    <p>{props.data.created}</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React, {useState, useEffect} from 'react'\r\nimport {useForm} from \"react-hook-form\"\r\nimport loading from \"./loading.gif\"\r\nimport axios from 'axios'\r\nimport Posts from './Posts'\r\n\r\n\r\nexport default function Form() {\r\n\r\n    let loadingDisplay = \"none\"\r\n\r\n    const {register, handleSubmit, errors, reset} = useForm()\r\n    \r\n\r\n  \r\n\r\n\r\n    \r\n        const [posts, setPosts] = useState([])\r\n        \r\n\r\n        useEffect(() => {\r\n          const fetchData = async () => {\r\n            const result = await axios(\r\n              'https://landalfserver.usamaster.vercel.app/landalftalk',\r\n            );\r\n       \r\n            setPosts(result.data);\r\n          };\r\n       \r\n          fetchData();\r\n        }, []);\r\n\r\n\r\n        const onSubmit = (message)=>{\r\n          const sendPostRequest = async () => {\r\n          try {\r\n              const resp = await axios.post('https://landalfserver.usamaster.vercel.app/landalftalk', message);\r\n              console.log(resp)\r\n              const fetchData = async () => {\r\n                const result = await axios(\r\n                  'https://landalfserver.usamaster.vercel.app/landalftalk',\r\n                );\r\n                result.data.reverse()\r\n                setPosts(result.data);\r\n              };\r\n           \r\n              fetchData();\r\n          } catch (err) {\r\n              // Handle Error Here\r\n              console.error(err);\r\n          }\r\n          };\r\n         \r\n          sendPostRequest(); \r\n              reset() \r\n            \r\n\r\n             \r\n              \r\n              }\r\n\r\n\r\n  return (\r\n    \r\n     <>\r\n         <h1>Landalf specific message board ðŸ˜‡ </h1>\r\n\r\n            <form onSubmit={handleSubmit(onSubmit)}>\r\n               \r\n                <label htmlFor=\"name\">Naam</label>\r\n                <input className=\"u-full-width\" type=\"text\" id=\"name\" name=\"name\" ref={register({required:true})}></input>\r\n                <label htmlFor=\"content\">Bericht</label>\r\n                <textarea className=\"u-full-width\" type=\"text\" id=\"content\" name=\"content\" ref={register({required:true})}></textarea>\r\n                <button className=\"button-primary\">Zeg het met woorden</button>\r\n                {errors.name && <h6 className=\"error\">Vul een naam in mofo</h6>}\r\n                {errors.content && <h6 className=\"error\">Ik mis een bericht</h6>}\r\n                <div style={{display:loadingDisplay }}>\r\n                <img alt=\"\" src={loading}></img>\r\n\r\n               \r\n                </div>\r\n              \r\n                  {posts.map(item => (\r\n                <Posts key={item._id} data={item} />\r\n              ))}\r\n               \r\n            </form>\r\n     </>\r\n   \r\n  );\r\n}","import React from 'react'\nimport './App.css';\nimport Form from './Form'\n\n\nfunction App() {\n  return (\n    <div className=\"main-form\">\n     <Form />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './skeleton.css'\nimport './styles.css'\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}